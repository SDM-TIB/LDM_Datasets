[
    {
        "dcterms:creator": [
            "Shital Shah",
            "Debadeepta Dey",
            "Chris Lovett",
            "Ashish Kapoor"
        ],
        "dcterms:description": "A high-fidelity visual and physical simulation environment for autonomous vehicles, allowing for the generation of large amounts of training data for machine learning projects.",
        "dcterms:title": "AirSim",
        "dcterms:issued": "2018",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Simulation",
            "Autonomous Vehicles"
        ],
        "dcat:keyword": [
            "Simulation",
            "Autonomous Vehicles",
            "Training Data"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "Simulation",
        "mls:task": [
            "Training Autonomous Vehicles"
        ]
    },
    {
        "dcterms:creator": [
            "Ian J. Goodfellow",
            "Jonathon Shlens",
            "Christian Szegedy"
        ],
        "dcterms:description": "A method for generating adversarial examples by applying a gradient-based approach to maximize the loss function, demonstrating the vulnerability of neural networks to small perturbations.",
        "dcterms:title": "FGSM (Fast Gradient Sign Method)",
        "dcterms:issued": "2014",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Adversarial Attacks",
            "Machine Learning"
        ],
        "dcat:keyword": [
            "Adversarial Examples",
            "Gradient Method"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "Algorithm",
        "mls:task": [
            "Adversarial Attack Generation"
        ]
    },
    {
        "dcterms:creator": [
            "Alexey Kurakin",
            "Ian J Goodfellow",
            "Samy Bengio"
        ],
        "dcterms:description": "An iterative method for generating adversarial examples that builds upon the Fast Gradient Sign Method (FGSM) to enhance the attack's effectiveness while minimizing visual distortion.",
        "dcterms:title": "BIM (Basic Iterative Method)",
        "dcterms:issued": "2018",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Adversarial Attacks",
            "Machine Learning"
        ],
        "dcat:keyword": [
            "Adversarial Examples",
            "Iterative Method"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "Algorithm",
        "mls:task": [
            "Adversarial Attack Generation"
        ]
    },
    {
        "dcterms:creator": [
            "Timothy P Lillicrap",
            "Jonathan J Hunt",
            "Alexander Pritzel",
            "Nicolas Heess",
            "Tom Erez",
            "Yuval Tassa",
            "David Silver",
            "Daan Wierstra"
        ],
        "dcterms:description": "A deep reinforcement learning algorithm that combines the actor-critic method with deep learning to handle continuous action spaces, particularly useful for controlling autonomous agents.",
        "dcterms:title": "DDPG (Deep Deterministic Policy Gradient)",
        "dcterms:issued": "2015",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Reinforcement Learning",
            "Autonomous Control"
        ],
        "dcat:keyword": [
            "Deep Learning",
            "Policy Gradient",
            "Continuous Control"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "Algorithm",
        "mls:task": [
            "Autonomous Control",
            "Guidance"
        ]
    },
    {
        "dcterms:creator": [
            "Scott M Lundberg",
            "Su-In Lee"
        ],
        "dcterms:description": "A unified approach to interpreting model predictions using Shapley values, providing insights into the contributions of individual features to the model's output.",
        "dcterms:title": "SHAP (SHapley Additive exPlanations)",
        "dcterms:issued": "2017",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Explainable AI",
            "Model Interpretation"
        ],
        "dcat:keyword": [
            "Model Explanations",
            "Shapley Values"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "Algorithm",
        "mls:task": [
            "Model Interpretation"
        ]
    },
    {
        "dcterms:creator": [
            "Sepp Hochreiter",
            "JÃ¼rgen Schmidhuber"
        ],
        "dcterms:description": "A type of recurrent neural network architecture that is capable of learning long-term dependencies, widely used in sequence prediction tasks.",
        "dcterms:title": "LSTM (Long Short Term Memory)",
        "dcterms:issued": "1997",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Deep Learning",
            "Sequence Prediction"
        ],
        "dcat:keyword": [
            "Recurrent Neural Network",
            "Long-term Dependencies"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "Algorithm",
        "mls:task": [
            "Sequence Prediction"
        ]
    },
    {
        "dcterms:creator": [
            "Lei He",
            "Nabil Aouf",
            "Bifeng Song"
        ],
        "dcterms:description": "An explainable deep reinforcement learning approach for UAV autonomous path planning, utilizing the Twin Delayed DDPG algorithm.",
        "dcterms:title": "TD3 (Twin Delayed DDPG)",
        "dcterms:issued": "2021",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Reinforcement Learning",
            "Autonomous Control"
        ],
        "dcat:keyword": [
            "Deep Learning",
            "Path Planning"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "Algorithm",
        "mls:task": [
            "Path Planning"
        ]
    },
    {
        "dcterms:creator": [
            "Yingxiao Xiang",
            "Wenjia Niu",
            "Jiqiang Liu",
            "Tong Chen",
            "Zhen Han"
        ],
        "dcterms:description": "A PCA-based model designed to predict adversarial examples in Q-learning for pathfinding tasks, demonstrating the application of PCA in adversarial settings.",
        "dcterms:title": "PCA (Principal Component Analysis)",
        "dcterms:issued": "2018",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Data Science",
            "Adversarial Learning"
        ],
        "dcat:keyword": [
            "PCA",
            "Adversarial Examples",
            "Pathfinding"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "Algorithm",
        "mls:task": [
            "Adversarial Prediction"
        ]
    }
]