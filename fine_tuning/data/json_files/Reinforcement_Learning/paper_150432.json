[
    {
        "dcterms:creator": [
            "Volodymyr Mnih",
            "Koray Kavukcuoglu",
            "David Silver",
            "Andrei A Rusu",
            "Joel Veness",
            "Marc G Bellemare",
            "Alex Graves",
            "Martin Riedmiller",
            "Andreas K Fidjeland",
            "Georg Ostrovski"
        ],
        "dcterms:description": "DQN is a variant of reinforcement learning that uses deep learning to predict the Q-value of current or potential states and actions, enabling the agent to learn optimal policies through trial-and-error.",
        "dcterms:title": "DQN (Deep Q-Network)",
        "dcterms:issued": "2015",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Reinforcement Learning",
            "Deep Learning"
        ],
        "dcat:keyword": [
            "Deep Q-Network",
            "Reinforcement Learning",
            "Q-learning",
            "Neural Networks"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": [
            "Decision Making",
            "Policy Optimization"
        ]
    },
    {
        "dcterms:creator": [
            "Changgang Zheng",
            "Shufan Yang",
            "Juan Marcelo Parra-Ullauri",
            "Antonio Garcia-Dom√≠nguez",
            "Nelly Bencomo"
        ],
        "dcterms:description": "The 5G Communications System Model performs calculations to estimate the Signal-to-Interference-plus-Noise Ratio (SINR) and the Reference Signal Received Power (RSRP) to determine user connectivity.",
        "dcterms:title": "5G Communications System Model",
        "dcterms:issued": "2021",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Telecommunications",
            "Signal Processing"
        ],
        "dcat:keyword": [
            "5G",
            "Signal-to-Interference-plus-Noise Ratio",
            "Reference Signal Received Power",
            "User Connectivity"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": [
            "Connectivity Estimation",
            "Performance Evaluation"
        ]
    },
    {
        "dcterms:creator": [
            "Thomas Hartmann",
            "Francois Fouquet"
        ],
        "dcterms:description": "Greycat is an open-source temporal graph database that allows for the analysis of complex data in motion, tracking the appearance and disappearance of entities and connections over time.",
        "dcterms:title": "Greycat",
        "dcterms:issued": "2017",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Data Management",
            "Graph Databases"
        ],
        "dcat:keyword": [
            "Temporal Graphs",
            "Data Analysis",
            "Open-source",
            "Graph Database"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": [
            "Data Tracking",
            "Complex Data Analysis"
        ]
    },
    {
        "dcterms:creator": [
            "Takuya Akiba",
            "Shotaro Sano",
            "Toshihiko Yanase",
            "Takeru Ohta",
            "Masanori Koyama"
        ],
        "dcterms:description": "Optuna is a hyperparameter optimization framework that allows for efficient and automated tuning of hyperparameters in machine learning models.",
        "dcterms:title": "Optuna",
        "dcterms:issued": "2019",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Machine Learning",
            "Hyperparameter Optimization"
        ],
        "dcat:keyword": [
            "Hyperparameter Tuning",
            "Optimization Framework",
            "Automated Machine Learning"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": [
            "Hyperparameter Optimization"
        ]
    }
]