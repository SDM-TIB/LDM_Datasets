[
    {
        "dcterms:creator": [
            "Duc-Cuong Dang",
            "Tobias Friedrich",
            "Timo Kötzing",
            "Martin S. Krejca",
            "Per Kristian Lehre",
            "Pietro S. Oliveto",
            "Dirk Sudholt",
            "Andrew M. Sutton"
        ],
        "dcterms:description": "Jump functions are optimization problems characterized by a fitness landscape with local optima separated by a gap. The (µ + 1) genetic algorithm (GA) is shown to optimize these functions efficiently, leveraging crossover to maintain diversity in the population.",
        "dcterms:title": "Jump functions",
        "dcterms:issued": "2018",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Optimization",
            "Genetic Algorithms"
        ],
        "dcat:keyword": [
            "Jump functions",
            "Genetic Algorithm",
            "Crossover",
            "Diversity"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": [
            "Optimization"
        ]
    },
    {
        "dcterms:creator": [
            "Benjamin Doerr",
            "Carola Doerr"
        ],
        "dcterms:description": "OneMax is a classic optimization problem where the goal is to maximize the number of 1s in a binary string. The (1 + (λ, λ)) genetic algorithm has been analyzed for its runtime efficiency on this problem.",
        "dcterms:title": "OneMax",
        "dcterms:issued": "2015",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Optimization",
            "Genetic Algorithms"
        ],
        "dcat:keyword": [
            "OneMax",
            "Genetic Algorithm",
            "Runtime Analysis"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": [
            "Optimization"
        ]
    },
    {
        "dcterms:creator": [
            "Denis Antipov",
            "Benjamin Doerr",
            "Vitalii Karavaev"
        ],
        "dcterms:description": "LeadingOnes is an optimization problem where the objective is to maximize the number of leading 1s in a binary string. The (1 + (λ, λ)) genetic algorithm has been rigorously analyzed for its performance on this problem.",
        "dcterms:title": "LeadingOnes",
        "dcterms:issued": "2019",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Optimization",
            "Genetic Algorithms"
        ],
        "dcat:keyword": [
            "LeadingOnes",
            "Genetic Algorithm",
            "Runtime Analysis"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": [
            "Optimization"
        ]
    },
    {
        "dcterms:creator": [
            "Benjamin Doerr",
            "Daniel Johannsen",
            "Timo Kötzing",
            "Frank Neumann",
            "Madeleine Theile"
        ],
        "dcterms:description": "The all-pairs shortest path problem involves finding the shortest paths between all pairs of vertices in a graph. The effectiveness of crossover operators in evolutionary algorithms for solving this problem has been analyzed.",
        "dcterms:title": "All-pairs shortest path problem",
        "dcterms:issued": "2013",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Graph Theory",
            "Optimization"
        ],
        "dcat:keyword": [
            "All-pairs shortest path",
            "Crossover",
            "Evolutionary Algorithms"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": [
            "Graph Optimization"
        ]
    },
    {
        "dcterms:creator": [
            "Pietro S. Oliveto",
            "Jun He",
            "Xin Yao"
        ],
        "dcterms:description": "The vertex cover problem is a classic problem in graph theory where the goal is to find the smallest set of vertices such that every edge in the graph is incident to at least one vertex from this set. The performance of population-based evolutionary algorithms on this problem has been analyzed.",
        "dcterms:title": "Vertex cover problem",
        "dcterms:issued": "2008",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Graph Theory",
            "Optimization"
        ],
        "dcat:keyword": [
            "Vertex Cover",
            "Evolutionary Algorithms",
            "Optimization"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": [
            "Graph Optimization"
        ]
    },
    {
        "dcterms:creator": [
            "Kalyanmoy Deb",
            "Amrit Pratap",
            "Sameer Agarwal",
            "T. Meyarivan"
        ],
        "dcterms:description": "NSGA-II is a fast and elitist multiobjective genetic algorithm that has been widely used for solving multi-objective optimization problems. It employs a fast non-dominated sorting approach.",
        "dcterms:title": "NSGA-II",
        "dcterms:issued": "2002",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Multi-objective Optimization",
            "Genetic Algorithms"
        ],
        "dcat:keyword": [
            "NSGA-II",
            "Multi-objective Optimization",
            "Genetic Algorithm"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": [
            "Multi-objective Optimization"
        ]
    }
]