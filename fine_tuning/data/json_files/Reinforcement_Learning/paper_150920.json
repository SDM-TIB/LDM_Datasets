[
    {
        "dcterms:creator": [],
        "dcterms:description": "The Waterworld problem is a typical non-Markovian task where the environment comprises a two-dimensional container with balls of diverse colors inside. Each ball travels in one direction at a constant speed and rebounds when it hits the boundary. The agent, compatible with the Gym step scheme, can accelerate or decelerate in any direction. The goal is to touch colored balls in a specific order.",
        "dcterms:title": "Waterworld problem",
        "dcterms:issued": "",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [],
        "dcat:keyword": [
            "Non-Markovian task",
            "Reinforcement Learning",
            "Temporal Logic"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "Y. Tassa",
            "Y. Doron",
            "A. Muldal",
            "T. Erez",
            "Y. Li",
            "D. d. L. Casas",
            "D. Budden",
            "A. Abdolmaleki",
            "J. Merel",
            "A. Lefrancq"
        ],
        "dcterms:description": "The Cartpole problem involves balancing a pole attached by an unactuated joint to a cart that moves along a frictionless track. The goal is to balance the pole by applying forces in the left or right direction on the cart.",
        "dcterms:title": "Cartpole problem",
        "dcterms:issued": "2018",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [],
        "dcat:keyword": [
            "Reinforcement Learning",
            "Balancing",
            "Control Problem"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "A. Taitler",
            "M. Gimelfarb",
            "S. Gopalakrishnan",
            "M. Mladenov",
            "X. Liu",
            "S. Sanner"
        ],
        "dcterms:description": "pyRDDLGym is a toolkit to convert RDDL (Relational Dynamic Influence Diagram Language) to Gym environments, facilitating the modeling of MDPs and enabling the application of reinforcement learning algorithms.",
        "dcterms:title": "pyRDDLGym",
        "dcterms:issued": "2022",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [],
        "dcat:keyword": [
            "Reinforcement Learning",
            "RDDL",
            "Gym environments"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "S. Sanner"
        ],
        "dcterms:description": "RDDL (Relational Dynamic Influence Diagram Language) is a modeling language widely applied in the planning community, used to model MDPs with a compact representation of factored states, actions, and observations.",
        "dcterms:title": "RDDL (Relational Dynamic Influence Diagram Language)",
        "dcterms:issued": "2010",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [],
        "dcat:keyword": [
            "Modeling Language",
            "MDP",
            "Planning"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [],
        "dcterms:description": "LTL (Linear Temporal Logic) is a formalism used to specify non-Markovian reward functions in reinforcement learning, allowing for the expression of temporal properties over finite sequences of states.",
        "dcterms:title": "LTL (Linear Temporal Logic)",
        "dcterms:issued": "",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [],
        "dcat:keyword": [
            "Temporal Logic",
            "Non-Markovian Rewards",
            "Reinforcement Learning"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    }
]