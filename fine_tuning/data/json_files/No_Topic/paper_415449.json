[
    {
        "dcterms:creator": [
            "F. Holm√©r"
        ],
        "dcterms:description": "Shader Forge is a visual shader editor for Unity that provides a real-time preview of edited shaders and simplifies the shader creation process.",
        "dcterms:title": "Shader Forge",
        "dcterms:issued": "2022",
        "dcterms:language": "",
        "dcterms:identifier": "https://acegikmo.com/shaderforge/",
        "dcat:theme": [
            "Shader Programming",
            "Visual Tools"
        ],
        "dcat:keyword": [
            "Shader editor",
            "Unity",
            "Visual programming"
        ],
        "dcat:landingPage": "https://acegikmo.com/shaderforge/",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "Amplify Creations"
        ],
        "dcterms:description": "Amplify Shader Editor is a visual shader editor for Unity that supports the latest render pipelines and provides greater control over shader functionalities.",
        "dcterms:title": "Amplify Shader Editor",
        "dcterms:issued": "2022",
        "dcterms:language": "",
        "dcterms:identifier": "http://amplify.pt/unity/amplify-shader-editor/",
        "dcat:theme": [
            "Shader Programming",
            "Visual Tools"
        ],
        "dcat:keyword": [
            "Shader editor",
            "Unity",
            "Visual programming"
        ],
        "dcat:landingPage": "http://amplify.pt/unity/amplify-shader-editor/",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "Unity Software Inc."
        ],
        "dcterms:description": "Shader Graph is a visual programming tool for writing shaders for Unity's render pipelines, representing complex shaders as graphs.",
        "dcterms:title": "Shader Graph",
        "dcterms:issued": "2022",
        "dcterms:language": "",
        "dcterms:identifier": "https://unity.com/features/shader-graph",
        "dcat:theme": [
            "Shader Programming",
            "Visual Tools"
        ],
        "dcat:keyword": [
            "Shader editor",
            "Unity",
            "Visual programming"
        ],
        "dcat:landingPage": "https://unity.com/features/shader-graph",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "Epic Games"
        ],
        "dcterms:description": "The Unreal Engine Material Editor is a tool for creating materials and shaders in Unreal Engine, providing a visual interface for shader programming.",
        "dcterms:title": "Unreal Engine Material Editor",
        "dcterms:issued": "2022",
        "dcterms:language": "",
        "dcterms:identifier": "https://docs.unrealengine.com/5.0/en-US/unreal-engine-material-editor-user-guide/",
        "dcat:theme": [
            "Shader Programming",
            "Visual Tools"
        ],
        "dcat:keyword": [
            "Shader editor",
            "Unreal Engine",
            "Visual programming"
        ],
        "dcat:landingPage": "https://docs.unrealengine.com/5.0/en-US/unreal-engine-material-editor-user-guide/",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "J. Lo"
        ],
        "dcterms:description": "Shader Weaver is a visual editor for shaders designed for 2D rendering in Unity, allowing users to create shaders without deep programming knowledge.",
        "dcterms:title": "Shader Weaver",
        "dcterms:issued": "2022",
        "dcterms:language": "",
        "dcterms:identifier": "https://www.shaderweaver.com/",
        "dcat:theme": [
            "Shader Programming",
            "Visual Tools"
        ],
        "dcat:keyword": [
            "Shader editor",
            "Unity",
            "Visual programming"
        ],
        "dcat:landingPage": "https://www.shaderweaver.com/",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "M. Ebner",
            "M. Reinhardt",
            "J. Albert"
        ],
        "dcterms:description": "This work discusses the evolution of vertex and pixel shaders using genetic programming techniques, focusing on user interaction.",
        "dcterms:title": "Evolution of Vertex and Pixel Shaders",
        "dcterms:issued": "2005",
        "dcterms:language": "",
        "dcterms:identifier": "https://doi.org/10.1007/978-3-540-31989-4_23",
        "dcat:theme": [
            "Shader Evolution",
            "Genetic Programming"
        ],
        "dcat:keyword": [
            "Vertex shaders",
            "Pixel shaders",
            "Genetic programming"
        ],
        "dcat:landingPage": "https://doi.org/10.1007/978-3-540-31989-4_23",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "J. C. Quiroz",
            "S. M. Dascalu"
        ],
        "dcterms:description": "This paper presents a web application for procedural content generation of vertex shaders, allowing users to explore different vertex displacement techniques.",
        "dcterms:title": "Design and Implementation of a Procedural Content Generation Web Application for Vertex Shaders",
        "dcterms:issued": "2016",
        "dcterms:language": "",
        "dcterms:identifier": "http://arxiv.org/abs/1608.05231",
        "dcat:theme": [
            "Shader Generation",
            "Web Applications"
        ],
        "dcat:keyword": [
            "Vertex shaders",
            "Procedural generation",
            "Web application"
        ],
        "dcat:landingPage": "http://arxiv.org/abs/1608.05231",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "A. Howlett",
            "S. Colton",
            "C. Browne"
        ],
        "dcterms:description": "This work explores the use of interactive genetic algorithms to evolve pixel shaders for the video game Subversion, focusing on color rendering.",
        "dcterms:title": "Evolving Pixel Shaders for the Prototype Video Game Subversion",
        "dcterms:issued": "2010",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Shader Evolution",
            "Video Game Development"
        ],
        "dcat:keyword": [
            "Pixel shaders",
            "Interactive genetic algorithms",
            "Video game"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "P. Sitthi-Amorn",
            "N. Modly",
            "W. Weimer",
            "J. Lawrence"
        ],
        "dcterms:description": "This paper discusses the application of genetic programming for shader simplification, focusing on balancing performance and visual accuracy.",
        "dcterms:title": "Genetic Programming for Shader Simplification",
        "dcterms:issued": "2011",
        "dcterms:language": "",
        "dcterms:identifier": "https://doi.org/10.1145/2070781.2024186",
        "dcat:theme": [
            "Shader Simplification",
            "Genetic Programming"
        ],
        "dcat:keyword": [
            "Shader simplification",
            "Genetic programming",
            "Performance optimization"
        ],
        "dcat:landingPage": "https://doi.org/10.1145/2070781.2024186",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "X. Snelgrove",
            "M. Tesfaldet"
        ],
        "dcterms:description": "This work presents the application of Compositional Pattern Producing Networks (CPPNs) in GLSL for creating interactive visual effects.",
        "dcterms:title": "Interactive CPPNs in GLSL",
        "dcterms:issued": "2018",
        "dcterms:language": "",
        "dcterms:identifier": "https://nips2018creativity.github.io",
        "dcat:theme": [
            "Shader Generation",
            "Machine Learning"
        ],
        "dcat:keyword": [
            "CPPNs",
            "GLSL",
            "Interactive effects"
        ],
        "dcat:landingPage": "https://nips2018creativity.github.io",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "O. Nalbach",
            "E. Arabadzhiyska",
            "D. Mehta",
            "H. Seidel",
            "T. Ritschel"
        ],
        "dcterms:description": "Deep Shading explores the use of convolutional neural networks for screen space shading, learning effects from examples without human programming.",
        "dcterms:title": "Deep Shading: Convolutional Neural Networks for Screen Space Shading",
        "dcterms:issued": "2017",
        "dcterms:language": "",
        "dcterms:identifier": "https://doi.org/10.1111/cgf.13225",
        "dcat:theme": [
            "Deep Learning",
            "Shader Generation"
        ],
        "dcat:keyword": [
            "Screen space shading",
            "Convolutional neural networks",
            "Shader generation"
        ],
        "dcat:landingPage": "https://doi.org/10.1111/cgf.13225",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "M. Olano",
            "B. Kuehne",
            "M. Simmons"
        ],
        "dcterms:description": "This paper discusses automatic shader level of detail techniques, focusing on optimizing shader performance based on scene complexity.",
        "dcterms:title": "Automatic Shader Level of Detail",
        "dcterms:issued": "2003",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Shader Optimization",
            "Performance"
        ],
        "dcat:keyword": [
            "Shader level of detail",
            "Performance optimization"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "F. Pellacini"
        ],
        "dcterms:description": "This work presents a user-configurable approach to automatic shader simplification, allowing users to balance performance and visual fidelity.",
        "dcterms:title": "User-Configurable Automatic Shader Simplification",
        "dcterms:issued": "2005",
        "dcterms:language": "",
        "dcterms:identifier": "https://doi.org/10.1145/1073204.1073212",
        "dcat:theme": [
            "Shader Simplification",
            "User Interaction"
        ],
        "dcat:keyword": [
            "Shader simplification",
            "User-configurable",
            "Performance optimization"
        ],
        "dcat:landingPage": "https://doi.org/10.1145/1073204.1073212",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "Nott"
        ],
        "dcterms:description": "Urp Dissolve 2020 is a shader package for Unity's Universal Render Pipeline that provides a dissolve effect for 3D objects.",
        "dcterms:title": "Urp Dissolve 2020",
        "dcterms:issued": "2023",
        "dcterms:language": "",
        "dcterms:identifier": "https://assetstore.unity.com/packages/vfx/shaders/urp-dissolve-2020-191256",
        "dcat:theme": [
            "Shader Effects",
            "Unity"
        ],
        "dcat:keyword": [
            "Dissolve effect",
            "Unity",
            "Shader package"
        ],
        "dcat:landingPage": "https://assetstore.unity.com/packages/vfx/shaders/urp-dissolve-2020-191256",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "J. F. Blinn"
        ],
        "dcterms:description": "This work discusses the simulation of wrinkled surfaces in computer graphics, providing techniques for realistic surface rendering.",
        "dcterms:title": "Simulation of Wrinkled Surfaces",
        "dcterms:issued": "1978",
        "dcterms:language": "",
        "dcterms:identifier": "https://doi.org/10.1145/800248.507101",
        "dcat:theme": [
            "Surface Rendering",
            "Computer Graphics"
        ],
        "dcat:keyword": [
            "Wrinkled surfaces",
            "Surface rendering",
            "Computer graphics"
        ],
        "dcat:landingPage": "https://doi.org/10.1145/800248.507101",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "J. R. Koza"
        ],
        "dcterms:description": "This book discusses genetic programming as a method for programming computers through natural selection, providing foundational knowledge in the field.",
        "dcterms:title": "Genetic Programming: On the Programming of Computers by Means of Natural Selection",
        "dcterms:issued": "1992",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Genetic Programming",
            "Artificial Intelligence"
        ],
        "dcat:keyword": [
            "Genetic programming",
            "Natural selection",
            "Artificial intelligence"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    }
]