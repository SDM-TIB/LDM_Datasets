[
    {
        "dcterms:creator": [
            "C. Doerr",
            "F. Ye",
            "N. Horesh",
            "H. Wang",
            "O. M. Shir",
            "T. BÃ¤ck"
        ],
        "dcterms:description": "The RUGGEDNESS function extends the classical jump function by introducing several small jumps, where the unique optimum is located in some bit string, with specific fitness values assigned based on Hamming distances from the optimum.",
        "dcterms:title": "RUGGEDNESS",
        "dcterms:issued": "2020",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [],
        "dcat:keyword": [
            "Evolutionary Algorithms",
            "Optimization",
            "Benchmark Function"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "M. Buzdalov",
            "C. Doerr"
        ],
        "dcterms:description": "The ONEMAX problem is a classical benchmark problem in evolutionary computation where the objective is to maximize the number of ones in a binary string.",
        "dcterms:title": "ONEMAX",
        "dcterms:issued": "2020",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [],
        "dcat:keyword": [
            "Evolutionary Algorithms",
            "Benchmark Problem"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "S. Droste",
            "T. Jansen",
            "I. Wegener"
        ],
        "dcterms:description": "The JUMP function is a benchmark function used in evolutionary algorithms that consists of a series of local optima, requiring the algorithm to jump over these to reach the global optimum.",
        "dcterms:title": "JUMP function",
        "dcterms:issued": "2002",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [],
        "dcat:keyword": [
            "Evolutionary Algorithms",
            "Benchmark Function"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "B. Doerr",
            "C. Doerr",
            "J. Yang"
        ],
        "dcterms:description": "The LeadingOnes problem is a benchmark problem in evolutionary computation where the goal is to maximize the number of leading ones in a binary string.",
        "dcterms:title": "LeadingOnes",
        "dcterms:issued": "2020",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [],
        "dcat:keyword": [
            "Evolutionary Algorithms",
            "Benchmark Problem"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    }
]