[
    {
        "dcterms:creator": [
            "B. Liu",
            "J. T. Ash",
            "S. Goel",
            "A. Krishnamurthy",
            "C. Zhang"
        ],
        "dcterms:description": "The Flip Flop languages are a simple instance of state tracking defined in terms of write, read, and ignore instructions. Each write instruction comes with a piece of information; whenever a read instruction is encountered, the information written by the last write instruction is recalled.",
        "dcterms:title": "FlipFlop",
        "dcterms:issued": "2023",
        "dcterms:language": "",
        "dcterms:identifier": "http://papers.nips.cc/paper_files/paper/2023/hash/510ad3018bbdc5b6e3b10646e2e35771-Abstract-Conference.html",
        "dcat:theme": [
            "Formal Languages",
            "State Tracking"
        ],
        "dcat:keyword": [
            "State Space Models",
            "Language Modeling",
            "Flip Flop Language"
        ],
        "dcat:landingPage": "https://huggingface.co/datasets/synthseq/flipflop",
        "dcterms:hasVersion": "",
        "dcterms:format": "Text",
        "mls:task": [
            "Predictive Modeling"
        ]
    },
    {
        "dcterms:creator": [
            "S. Yao",
            "B. Peng",
            "C. Papadimitriou",
            "K. Narasimhan"
        ],
        "dcterms:description": "Dyck-1 is the language of well-formed strings over parentheses, where a counter is incremented (decremented) whenever an opening (closing) bracket is encountered; a string is well-formed if and only if the counter is 0 at the end of the string.",
        "dcterms:title": "Dyck-1",
        "dcterms:issued": "2021",
        "dcterms:language": "",
        "dcterms:identifier": "10.18653/v1/2021.acl-long.292",
        "dcat:theme": [
            "Formal Languages",
            "Context-Free Languages"
        ],
        "dcat:keyword": [
            "Dyck Language",
            "Well-formed Strings",
            "Counter Languages"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "Text",
        "mls:task": [
            "Language Recognition"
        ]
    },
    {
        "dcterms:creator": [
            "A. Krebs",
            "K. Lange",
            "M. Ludwig"
        ],
        "dcterms:description": "Shuffle-Dyck is defined as the shuffle of multiple Dyck-1 languages, where each language is defined in terms of a specific set of parentheses.",
        "dcterms:title": "Shuffle-Dyck",
        "dcterms:issued": "2015",
        "dcterms:language": "",
        "dcterms:identifier": "10.4230/LIPICS.STACS.2015.594",
        "dcat:theme": [
            "Formal Languages",
            "Context-Free Languages"
        ],
        "dcat:keyword": [
            "Shuffle Languages",
            "Dyck Languages",
            "Counter Languages"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "Text",
        "mls:task": [
            "Language Recognition"
        ]
    },
    {
        "dcterms:creator": [
            "P. C. Fischer",
            "A. R. Meyer",
            "A. L. Rosenberg"
        ],
        "dcterms:description": "The anbn language consists of strings with equal numbers of 'a's followed by 'b's, which can be recognized by a finite-state automaton.",
        "dcterms:title": "anbn",
        "dcterms:issued": "1968",
        "dcterms:language": "",
        "dcterms:identifier": "10.1007/BF01694011",
        "dcat:theme": [
            "Formal Languages",
            "Context-Free Languages"
        ],
        "dcat:keyword": [
            "Counter Languages",
            "Regular Languages"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "Text",
        "mls:task": [
            "Language Recognition"
        ]
    },
    {
        "dcterms:creator": [
            "P. C. Fischer",
            "A. R. Meyer",
            "A. L. Rosenberg"
        ],
        "dcterms:description": "The anbncn language consists of strings with equal numbers of 'a's, 'b's, and 'c's, which can be recognized by a finite-state automaton.",
        "dcterms:title": "anbncn",
        "dcterms:issued": "1968",
        "dcterms:language": "",
        "dcterms:identifier": "10.1007/BF01694011",
        "dcat:theme": [
            "Formal Languages",
            "Context-Sensitive Languages"
        ],
        "dcat:keyword": [
            "Counter Languages",
            "Regular Languages"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "Text",
        "mls:task": [
            "Language Recognition"
        ]
    },
    {
        "dcterms:creator": [
            "P. C. Fischer",
            "A. R. Meyer",
            "A. L. Rosenberg"
        ],
        "dcterms:description": "The anbncndn language consists of strings with equal numbers of 'a's, 'b's, 'c's, and 'd's, which can be recognized by a finite-state automaton.",
        "dcterms:title": "anbncndn",
        "dcterms:issued": "1968",
        "dcterms:language": "",
        "dcterms:identifier": "10.1007/BF01694011",
        "dcat:theme": [
            "Formal Languages",
            "Context-Sensitive Languages"
        ],
        "dcat:keyword": [
            "Counter Languages",
            "Regular Languages"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "Text",
        "mls:task": [
            "Language Recognition"
        ]
    }
]