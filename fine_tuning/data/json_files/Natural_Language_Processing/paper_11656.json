[
    {
        "dcterms:creator": [
            "P. Veliˇckovi´c",
            "A. P. Badia",
            "D. Budden",
            "R. Pascanu",
            "A. Banino",
            "M. Dashevskiy",
            "R. Hadsell",
            "C. Blundell"
        ],
        "dcterms:description": "The CLRS Algorithmic Reasoning Benchmark represents a set of 30 diverse algorithmic problems, utilizing graphs to encode data and allowing for various input sizes.",
        "dcterms:title": "CLRS Algorithmic Reasoning Benchmark",
        "dcterms:issued": "2022",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Algorithmic Reasoning",
            "Machine Learning"
        ],
        "dcat:keyword": [
            "Algorithm problems",
            "Graph algorithms",
            "Neural networks"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "J. B. Kruskal"
        ],
        "dcterms:description": "Minimum spanning tree algorithms include various methods for finding the minimum spanning tree in a graph, such as Kruskal's and Prim's algorithms.",
        "dcterms:title": "Minimum Spanning Tree Algorithms",
        "dcterms:issued": "1956",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Graph Theory",
            "Algorithms"
        ],
        "dcat:keyword": [
            "Minimum spanning tree",
            "Graph algorithms"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "P. Veliˇckovi´c",
            "A. P. Badia",
            "D. Budden",
            "R. Pascanu",
            "A. Banino",
            "M. Dashevskiy",
            "R. Hadsell",
            "C. Blundell"
        ],
        "dcterms:description": "Sorting algorithms are a class of algorithms that arrange the elements of a list or array in a specific order, such as ascending or descending.",
        "dcterms:title": "Sorting Algorithms",
        "dcterms:issued": "2022",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Sorting",
            "Algorithms"
        ],
        "dcat:keyword": [
            "Sorting",
            "Algorithms",
            "Data structures"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "P. Veliˇckovi´c",
            "A. P. Badia",
            "D. Budden",
            "R. Pascanu",
            "A. Banino",
            "M. Dashevskiy",
            "R. Hadsell",
            "C. Blundell"
        ],
        "dcterms:description": "Binary search is an efficient algorithm for finding an item from a sorted list of items, reducing the search space by half with each step.",
        "dcterms:title": "Binary Search",
        "dcterms:issued": "2022",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Searching",
            "Algorithms"
        ],
        "dcat:keyword": [
            "Binary search",
            "Searching algorithms"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "P. Veliˇckovi´c",
            "A. P. Badia",
            "D. Budden",
            "R. Pascanu",
            "A. Banino",
            "M. Dashevskiy",
            "R. Hadsell",
            "C. Blundell"
        ],
        "dcterms:description": "The Minimum dataset refers to finding the minimum value in a set of numbers or data points.",
        "dcterms:title": "Minimum",
        "dcterms:issued": "2022",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Mathematics",
            "Algorithms"
        ],
        "dcat:keyword": [
            "Minimum value",
            "Mathematical algorithms"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "P. Veliˇckovi´c",
            "A. P. Badia",
            "D. Budden",
            "R. Pascanu",
            "A. Banino",
            "M. Dashevskiy",
            "R. Hadsell",
            "C. Blundell"
        ],
        "dcterms:description": "Depth-First Search (DFS) is an algorithm for traversing or searching tree or graph data structures, exploring as far as possible along each branch before backtracking.",
        "dcterms:title": "Depth-First Search (DFS)",
        "dcterms:issued": "2022",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Graph Traversal",
            "Algorithms"
        ],
        "dcat:keyword": [
            "DFS",
            "Graph algorithms",
            "Tree traversal"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "P. Veliˇckovi´c",
            "A. P. Badia",
            "D. Budden",
            "R. Pascanu",
            "A. Banino",
            "M. Dashevskiy",
            "R. Hadsell",
            "C. Blundell"
        ],
        "dcterms:description": "Topological Sort is an algorithm for ordering the vertices of a directed acyclic graph (DAG) in a linear sequence.",
        "dcterms:title": "Topological Sort",
        "dcterms:issued": "2022",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Graph Theory",
            "Algorithms"
        ],
        "dcat:keyword": [
            "Topological sorting",
            "Graph algorithms"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "P. Veliˇckovi´c",
            "A. P. Badia",
            "D. Budden",
            "R. Pascanu",
            "A. Banino",
            "M. Dashevskiy",
            "R. Hadsell",
            "C. Blundell"
        ],
        "dcterms:description": "The Bellman-Ford algorithm computes shortest paths from a single source vertex to all other vertices in a weighted graph.",
        "dcterms:title": "Bellman-Ford",
        "dcterms:issued": "2022",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Graph Algorithms",
            "Shortest Path"
        ],
        "dcat:keyword": [
            "Shortest path",
            "Graph algorithms"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "E. W. Dijkstra"
        ],
        "dcterms:description": "Dijkstra's algorithm finds the shortest path between nodes in a graph, which may represent, for example, road networks.",
        "dcterms:title": "Dijkstra",
        "dcterms:issued": "1959",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Graph Algorithms",
            "Shortest Path"
        ],
        "dcat:keyword": [
            "Shortest path",
            "Graph algorithms"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "P. Veliˇckovi´c",
            "A. P. Badia",
            "D. Budden",
            "R. Pascanu",
            "A. Banino",
            "M. Dashevskiy",
            "R. Hadsell",
            "C. Blundell"
        ],
        "dcterms:description": "The Floyd-Warshall algorithm is a dynamic programming algorithm for finding the shortest paths in a weighted graph with positive or negative edge weights.",
        "dcterms:title": "Floyd-Warshall",
        "dcterms:issued": "2022",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Graph Algorithms",
            "Shortest Path"
        ],
        "dcat:keyword": [
            "Shortest path",
            "Graph algorithms"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "P. Veliˇckovi´c",
            "A. P. Badia",
            "D. Budden",
            "R. Pascanu",
            "A. Banino",
            "M. Dashevskiy",
            "R. Hadsell",
            "C. Blundell"
        ],
        "dcterms:description": "Articulation Points are vertices in a graph whose removal increases the number of connected components.",
        "dcterms:title": "Articulation Points",
        "dcterms:issued": "2022",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Graph Theory",
            "Algorithms"
        ],
        "dcat:keyword": [
            "Graph connectivity",
            "Graph algorithms"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "P. Veliˇckovi´c",
            "A. P. Badia",
            "D. Budden",
            "R. Pascanu",
            "A. Banino",
            "M. Dashevskiy",
            "R. Hadsell",
            "C. Blundell"
        ],
        "dcterms:description": "Bridges are edges in a graph whose removal increases the number of connected components.",
        "dcterms:title": "Bridges",
        "dcterms:issued": "2022",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Graph Theory",
            "Algorithms"
        ],
        "dcat:keyword": [
            "Graph connectivity",
            "Graph algorithms"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "P. Veliˇckovi´c",
            "A. P. Badia",
            "D. Budden",
            "R. Pascanu",
            "A. Banino",
            "M. Dashevskiy",
            "R. Hadsell",
            "C. Blundell"
        ],
        "dcterms:description": "SCC (Strongly Connected Components) refers to the maximal subgraphs where every vertex is reachable from every other vertex.",
        "dcterms:title": "SCC (Strongly Connected Components)",
        "dcterms:issued": "2022",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Graph Theory",
            "Algorithms"
        ],
        "dcat:keyword": [
            "Graph connectivity",
            "Graph algorithms"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "P. Veliˇckovi´c",
            "A. P. Badia",
            "D. Budden",
            "R. Pascanu",
            "A. Banino",
            "M. Dashevskiy",
            "R. Hadsell",
            "C. Blundell"
        ],
        "dcterms:description": "DAG SP (Directed Acyclic Graph Shortest Path) refers to finding the shortest paths in a directed acyclic graph.",
        "dcterms:title": "DAG SP (Directed Acyclic Graph Shortest Path)",
        "dcterms:issued": "2022",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Graph Algorithms",
            "Shortest Path"
        ],
        "dcat:keyword": [
            "Shortest path",
            "Graph algorithms"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "J. B. Kruskal"
        ],
        "dcterms:description": "MST-Kruskal refers to the minimum spanning tree algorithm developed by Kruskal, which finds the minimum spanning tree for a connected weighted graph.",
        "dcterms:title": "MST-Kruskal",
        "dcterms:issued": "1956",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Graph Theory",
            "Algorithms"
        ],
        "dcat:keyword": [
            "Minimum spanning tree",
            "Graph algorithms"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "J. B. Kruskal"
        ],
        "dcterms:description": "MST-Prim refers to the minimum spanning tree algorithm developed by Prim, which finds the minimum spanning tree for a connected weighted graph.",
        "dcterms:title": "MST-Prim",
        "dcterms:issued": "1956",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Graph Theory",
            "Algorithms"
        ],
        "dcat:keyword": [
            "Minimum spanning tree",
            "Graph algorithms"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    }
]