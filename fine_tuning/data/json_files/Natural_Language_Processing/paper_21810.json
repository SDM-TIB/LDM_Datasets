[
    {
        "dcterms:creator": [
            "S. Martello",
            "P. Toth"
        ],
        "dcterms:description": "The knapsack problem is one of the most studied discrete NP-hard problems, focusing on maximizing the total value of items selected without exceeding a given weight capacity.",
        "dcterms:title": "Knapsack Problem",
        "dcterms:issued": "1990",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Optimization",
            "Combinatorial Problems"
        ],
        "dcat:keyword": [
            "Knapsack",
            "Discrete Optimization",
            "NP-hard Problems"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "Text",
        "mls:task": [
            "Optimization"
        ]
    },
    {
        "dcterms:creator": [
            "J.-B. Mouret",
            "G. Maguire"
        ],
        "dcterms:description": "The planar robotic arm problem involves determining suitable angles for each joint of a robotic arm to reach a specified target point in a two-dimensional plane.",
        "dcterms:title": "Planar Robotic Arm Problem",
        "dcterms:issued": "2020",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Robotics",
            "Optimization"
        ],
        "dcat:keyword": [
            "Robotic Arm",
            "Continuous Optimization",
            "Angle Optimization"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "Text",
        "mls:task": [
            "Optimization"
        ]
    },
    {
        "dcterms:creator": [
            "Q. Xinghua",
            "Z. Sun",
            "Y. Ong",
            "A. Gupta",
            "P. Wei"
        ],
        "dcterms:description": "Minimalistic attacks involve perturbing a small number of pixels in keyframes to deceive reinforcement learning policies, focusing on the efficiency of generating successful attacks.",
        "dcterms:title": "Minimalistic Attacks",
        "dcterms:issued": "2020",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Adversarial Attacks",
            "Reinforcement Learning"
        ],
        "dcat:keyword": [
            "Adversarial Attacks",
            "Reinforcement Learning",
            "Minimalistic Attacks"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "Text",
        "mls:task": [
            "Adversarial Attack"
        ]
    },
    {
        "dcterms:creator": [
            "Y. Wu",
            "E. Mansimov",
            "R. B. Grosse",
            "S. Liao",
            "J. Ba"
        ],
        "dcterms:description": "BeamRider is a game environment used for testing reinforcement learning algorithms, focusing on the agent's ability to navigate and score points while avoiding obstacles.",
        "dcterms:title": "BeamRider",
        "dcterms:issued": "2017",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Reinforcement Learning",
            "Game Environments"
        ],
        "dcat:keyword": [
            "BeamRider",
            "Reinforcement Learning",
            "Game AI"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "Text",
        "mls:task": [
            "Reinforcement Learning"
        ]
    },
    {
        "dcterms:creator": [
            "Y. Wu",
            "E. Mansimov",
            "R. B. Grosse",
            "S. Liao",
            "J. Ba"
        ],
        "dcterms:description": "Qbert is a classic arcade game environment used for evaluating reinforcement learning algorithms, focusing on the agent's ability to navigate platforms and avoid enemies.",
        "dcterms:title": "Qbert",
        "dcterms:issued": "2017",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Reinforcement Learning",
            "Game Environments"
        ],
        "dcat:keyword": [
            "Qbert",
            "Reinforcement Learning",
            "Game AI"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "Text",
        "mls:task": [
            "Reinforcement Learning"
        ]
    },
    {
        "dcterms:creator": [
            "Y. Wu",
            "E. Mansimov",
            "R. B. Grosse",
            "S. Liao",
            "J. Ba"
        ],
        "dcterms:description": "Seaquest is another game environment used for testing reinforcement learning algorithms, where the agent must navigate underwater and rescue divers while avoiding enemies.",
        "dcterms:title": "Seaquest",
        "dcterms:issued": "2017",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Reinforcement Learning",
            "Game Environments"
        ],
        "dcat:keyword": [
            "Seaquest",
            "Reinforcement Learning",
            "Game AI"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "Text",
        "mls:task": [
            "Reinforcement Learning"
        ]
    }
]