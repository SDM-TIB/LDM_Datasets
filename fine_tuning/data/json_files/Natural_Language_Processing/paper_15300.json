[
    {
        "dcterms:creator": [
            "Chris Lattner",
            "Vikram Adve"
        ],
        "dcterms:description": "LLVM is a compilation framework designed for lifelong program analysis and transformation, providing a set of reusable libraries and tools for building compilers.",
        "dcterms:title": "LLVM",
        "dcterms:issued": "2004",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Compiler Framework",
            "Program Analysis"
        ],
        "dcat:keyword": [
            "Compilation",
            "Optimization",
            "Code Transformation"
        ],
        "dcat:landingPage": "https://llvm.org/docs/Passes.html",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "Xuejun Yang",
            "Yang Chen",
            "Eric Eide",
            "John Regehr"
        ],
        "dcterms:description": "Csmith is a tool for generating random C programs that can be used to test C compilers, focusing on finding bugs in compiler implementations.",
        "dcterms:title": "Csmith",
        "dcterms:issued": "2011",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Compiler Testing",
            "Random Program Generation"
        ],
        "dcat:keyword": [
            "C Compiler",
            "Bug Finding",
            "Random Testing"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "Vsevolod Livinskii",
            "Dmitry Babokin",
            "John Regehr"
        ],
        "dcterms:description": "YARPGen is a random testing tool for C and C++ compilers, designed to generate diverse test cases to uncover bugs in compiler implementations.",
        "dcterms:title": "YARPGen",
        "dcterms:issued": "2020",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Compiler Testing",
            "Random Testing"
        ],
        "dcat:keyword": [
            "C Compiler",
            "C++ Compiler",
            "Bug Finding"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [
            "Karine Even-Mendoza",
            "Arindam Sharma",
            "Alastair F Donaldson",
            "Cristian Cadar"
        ],
        "dcterms:description": "GrayC is a greybox fuzzing tool specifically designed for compilers and analyzers for C, focusing on generating test cases that can uncover bugs in compiler implementations.",
        "dcterms:title": "GrayC",
        "dcterms:issued": "2023",
        "dcterms:language": "",
        "dcterms:identifier": "",
        "dcat:theme": [
            "Compiler Testing",
            "Fuzzing"
        ],
        "dcat:keyword": [
            "C Compiler",
            "Bug Finding",
            "Greybox Fuzzing"
        ],
        "dcat:landingPage": "",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [],
        "dcterms:description": "PyTorch Inductor is a compiler for deep learning models that optimizes the execution of PyTorch programs, focusing on performance improvements through various optimization techniques.",
        "dcterms:title": "PyTorch Inductor",
        "dcterms:issued": "2023",
        "dcterms:language": "",
        "dcterms:identifier": "https://pytorch.org/get-started/pytorch-2.0",
        "dcat:theme": [
            "Deep Learning",
            "Compiler Optimization"
        ],
        "dcat:keyword": [
            "PyTorch",
            "Deep Learning Compiler",
            "Optimization"
        ],
        "dcat:landingPage": "https://pytorch.org/get-started/pytorch-2.0",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [],
        "dcterms:description": "TensorFlow Lite is a lightweight version of TensorFlow designed for mobile and embedded devices, enabling efficient model inference on resource-constrained environments.",
        "dcterms:title": "TensorFlow Lite",
        "dcterms:issued": "2023",
        "dcterms:language": "",
        "dcterms:identifier": "https://www.tensorflow.org/lite",
        "dcat:theme": [
            "Machine Learning",
            "Mobile Computing"
        ],
        "dcat:keyword": [
            "TensorFlow",
            "Mobile Inference",
            "Embedded Systems"
        ],
        "dcat:landingPage": "https://www.tensorflow.org/lite",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    },
    {
        "dcterms:creator": [],
        "dcterms:description": "TensorFlow XLA (Accelerated Linear Algebra) is a domain-specific compiler for linear algebra that optimizes TensorFlow computations, improving performance through ahead-of-time compilation.",
        "dcterms:title": "TensorFlow-XLA",
        "dcterms:issued": "2023",
        "dcterms:language": "",
        "dcterms:identifier": "https://www.tensorflow.org/xla",
        "dcat:theme": [
            "Machine Learning",
            "Compiler Optimization"
        ],
        "dcat:keyword": [
            "TensorFlow",
            "Compiler",
            "Optimization"
        ],
        "dcat:landingPage": "https://www.tensorflow.org/xla",
        "dcterms:hasVersion": "",
        "dcterms:format": "",
        "mls:task": []
    }
]